{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/NavBar/NavBar.jsx","components/HallOfFame/HallOfFame.jsx","pages/HomePage/HomePage.jsx","components/AddPostForm/AddPostForm.jsx","utils/postsAPI.js","components/EditPostForm/EditPostForm.jsx","components/AddCommentForm/AddCommentForm.jsx","components/EditCommentForm/EditCommentForm.jsx","components/CommentLine/CommentLine.jsx","components/Comment/Comment.jsx","components/PostContent/PostContent.jsx","components/PostCard/PostCard.jsx","components/PostFeed/PostFeed.jsx","utils/likesAPI.js","utils/inspiringAPI.js","pages/ArtFeedPage/ArtFeedPage.jsx","components/EditProfileBioForm/EditProfileBioForm.jsx","components/ProfileBio/ProfileBio.jsx","pages/ProfilePage/ProfilePage.jsx","utils/commentsAPI.js","pages/Post/Post.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","data","fetch","method","headers","Accept","body","stringify","then","res","ok","json","Error","tokenService","logout","login","creds","Headers","getUser","getProfile","username","updateProfile","console","log","SignUpPage","useState","setError","email","password","passwordConf","state","setState","history","useHistory","handleChange","e","target","name","value","a","preventDefault","userService","handleSignUpOrLogin","push","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Button","LoginPage","fluid","size","Message","to","NavBar","handleLogout","clearing","floated","onClick","Icon","Image","src","photoUrl","avatar","HallOfFame","post","colors","index","setIndex","timeoutRef","useRef","resetTimeout","current","clearTimeout","useEffect","setTimeout","prevIndex","length","transform","map","backgroundColor","_","idx","HomePage","AddPostForm","selectedFile","setSelectedFile","content","formData","FormData","append","handleAddPost","files","create","getAll","getOne","postID","updatePost","result","catch","deletePost","EditPostForm","editPost","Card","Description","_id","err","AddCommentForm","handleAddComment","commentContent","Row","TextArea","EditCommentForm","comment","editComment","CommentLine","loading","deleteComment","showEditCommentForm","setShowEditCommentForm","width","Comment","Dimmer","active","inverted","Loader","comments","PostContent","showEditForm","Content","PostCard","isProfile","addLike","removeLike","addInspiring","removeInspiring","isPostView","contentLoading","setShowEditForm","liked","likes","findIndex","like","clickHandlerLike","likeColor","inspired","inspiring","clickHandlerInspiring","inspiringColor","wrapped","ui","PostFeed","posts","numPhotosCol","Group","itemsPerRow","stackable","likeID","inspireID","ArtFeedPage","setPosts","setLoading","postsAPI","getPosts","postId","likesAPI","inspiringAPI","inspiringID","centered","EditProfileBioForm","bio","Field","ProfileBio","column","minWidth","vertical","ProfilePage","profileUser","setProfileUser","useParams","commentID","Post","setPost","id","setContentLoading","getPost","input","commentsAPI","commentId","marginTop","App","setUser","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72dcd15b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(data) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(`${BASE_URL}username/` + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Bad Credentials')\n  })\n}\n\nfunction updateProfile(user, data){\n  console.log(user.username);\n  console.log(data);\n  return fetch(`${BASE_URL}username/` + user.username, {\n    method: 'PUT',\n    body: data,\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Update Failed');\n  });\n}\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile,\n  updateProfile\n};","import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\n\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\nimport {Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\n\n\nexport default function SignUpPage(props){\n\n    const [error, setError] = useState('')\n    const [state, setState] = useState({\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: ''\n    })\n\n    const history = useHistory()\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        \n        // const formData = new FormData();\n        // console.log(formData)\n\n        // for (let key in state) {\n        //     formData.append(key, state[key])\n        // }\n\n        try{\n            await userService.signup(state);\n            props.handleSignUpOrLogin()\n            history.push('/')\n        } catch(err) {\n            console.log('handleSubmit error has occured');\n            console.log(err.message)\n            setError(err.message)\n        }\n    }\n \n    \n    return (\n\n        <Grid textAlign='center' style={{height:'100vh'}} verticalAlign='middle'>\n            <Grid.Column style={{maxWidth: 300 }}>\n                <Header as='h2' color='teal' textAlign='center'>\n                    Sign Up\n                </Header>\n                <Form autoComplete='off' onSubmit={handleSubmit}>\n                    <Segment stacked>\n                        <Form.Input\n                            name=\"username\"\n                            placeholder='User Name'\n                            value={state.username}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Form.Input\n                            name=\"email\"\n                            type=\"email\"\n                            placeholder='email'\n                            value={state.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Form.Input\n                            name='password'\n                            type='password'\n                            placeholder='password'\n                            value={state.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Form.Input\n                            name='passwordConf'\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={state.passwordConf}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Button\n                            type='submit'\n                            className='btn'\n                        >Sign Up</Button>\n                    </Segment>\n                    {error ? <ErrorMessage error={error}/> : null}\n                </Form>\n            </Grid.Column>\n        </Grid>        \n\n      );   \n    \n}\n","import React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\nimport {Button, Form, Grid, Header, Message, Segment} from 'semantic-ui-react';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport default function LoginPage(props){\n    const [error, setError] = useState(\"\");\n    const [state, setState] = useState({\n        email:\"\",\n        password: \"\",\n    });\n\n    const history = useHistory();\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            await userService.login(state);\n            props.handleSignUpOrLogin();\n            history.push('/');\n        } catch(err) {\n            setError(err.message);\n        }\n    }\n\n    return (\n        <Grid textAlign='center' style={{height:'100vh'}} verticalAlign=\"middle\">\n            <Grid.Column style={{maxWidth: 300}}>\n                <Header as='h2' color=\"teal\" textAlign='center'>\n                    Log-In to Your Account\n                </Header>\n                <Form autoComplete='off' onSubmit={handleSubmit}>\n                    <Segment stacked>\n                        <Form.Input\n                            type='email'\n                            name='email'\n                            placeholder='email'\n                            value={state.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Form.Input\n                            type='password'\n                            name='password'\n                            placeholder='password'\n                            value={state.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <Button\n                            color='#a30f4d'\n                            fluid\n                            size='large'\n                            type='submit'\n                            className='btn'\n                        >LogIn</Button>\n                    </Segment>\n                </Form>\n                <Message>\n                    New to us? <Link to='/signup'>Sign Up</Link>\n                </Message>\n                {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n        </Grid>\n      );\n}\n\n","import React from \"react\";\nimport { Segment, Header, Image, Icon } from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function NavBar({user, handleLogout}){\n    return (\n        <Segment clearing>\n            <Header as=\"h2\" floated=\"right\">\n                <Link to=\"\" onClick={handleLogout}><Icon name=\"log out\" /></Link>\n            </Header>\n            <Header as=\"h2\" floated=\"left\">\n                <Link to={`/username/${user.username}`}><Image src={user.photoUrl[0].photoUrl} avatar /></Link>\n                <Link to=\"/\"><Icon name=\"home\" /></Link>\n                <Link to=\"/art_feed\"><Icon name=\"paint brush\" /></Link>\n            </Header>\n        </Segment>\n    )\n}","import React, {useState, useEffect, useRef} from \"react\"\nimport \"./HallOfFame.css\";\n\nexport default function HallOfFame({user, post}){\n    const colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n    const delay = 2500;\n    \n\n      const [index, setIndex] = useState(0);\n      const timeoutRef = useRef(null);\n    \n    \n      function resetTimeout() {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n      }\n    \n      useEffect(() => {\n        resetTimeout();\n        timeoutRef.current = setTimeout(\n          () =>\n            setIndex((prevIndex) =>\n              prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n            ),\n          delay\n        );\n    \n        return () => {\n          resetTimeout();\n        };\n      }, [index]);\n\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div\n            className=\"slide\"\n            key={index}\n            style={{ backgroundColor }}\n          ></div>\n        ))}\n      </div>\n\n      <div className=\"slideshowDots\">\n        {colors.map((_, idx) => (\n          <div\n            key={idx}\n            className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\n            onClick={() => {\n              setIndex(idx);\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport HallOfFame from \"../../components/HallOfFame/HallOfFame\";\nimport {Icon} from \"semantic-ui-react\"\nimport {Link} from \"react-router-dom\";\n\nexport default function HomePage({user, handleLogout}){\n\n\n\n    return (\n        <>\n            <NavBar user={user} handleLogout={handleLogout}/>\n            <HallOfFame user={user} />\n            <div>\n                <h3>Click&nbsp;\n                    <span>&nbsp;<Link to=\"/art_feed\"><Icon name=\"paint brush\"></Icon></Link></span>\n                    to check out more of\n                    <br/>\n                    awesome art works!\n                </h3>\n            </div>\n        </>\n    )\n} ","import React, { useState } from \"react\";\n\nimport { Button, Form, Grid, Segment } from \"semantic-ui-react\";\n\nexport default function AddPostForm(props) {\n    const [selectedFile, setSelectedFile] = useState(\"\");\n    const [state, setState] = useState({\n        content: \"\",\n    });\n\n    function handleFileInput(e) {\n        setSelectedFile(e.target.files[0]);\n    }\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"photo\", selectedFile);\n        formData.append(\"content\", state.content);\n        props.handleAddPost(formData);\n    }\n\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n            <Grid.Column style={{ maxWidth: 300 }}>\n                <Segment>\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <Form.Input\n                            className=\"form-control\"\n                            name=\"content\"\n                            value={state.content}\n                            placeholder=\"Details\"\n                            onChange={handleChange}\n                            required\n                            />\n                        <Form.Input\n                            className=\"form-control\"\n                            type=\"file\"\n                            name=\"photo\"\n                            placeholder=\"upload image\"\n                            onChange={handleFileInput}\n                            />\n                        <Button type=\"submit\" className=\"btn\">\n                            Add Post\n                        </Button>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    );\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/posts/';\n\nexport function create(post) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: post,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json());\n}\n\nexport function getAll() {\n    console.log(\"getall function is firing\")\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json());\n}\n\nexport function getOne(postID) {\n    console.log(\"getOne function is firing\")\n    return fetch(`${BASE_URL}posts/` + postID, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json());\n}\n\nexport function updatePost(postID, data) {\n    console.log(\"updatePost function is firing\")\n    console.log(data);\n    return fetch(`${BASE_URL}posts/` + postID, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json\",\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        },\n    }).then(res => res.json()).then(result => { console.log('success:', result);\n    }).catch(error => {console.log('Error', error)});\n}\n\nexport function deletePost(postID) {\n    console.log(\"deletePost function is firing\")\n    return fetch(`${BASE_URL}posts/${postID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error has occured while deleting post')\n    })\n}","import React, {useState} from \"react\";\nimport {Grid, Form, Button, Segment, Card} from 'semantic-ui-react';\nimport {useHistory} from 'react-router-dom';\n\nexport default function EditPostForm({post, editPost}){\n    const [state, setState] = useState({\n        content: \"\",\n    });\n\n    const history = useHistory();\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        console.log(e.target);\n        console.log(state);\n        try {\n            editPost(post._id, state);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n\n\n        // const formData = new FormData();\n        // formData.append(\"photo\", selectedFile);\n        // formData.append(\"content\", state.content);\n        // props.handleAddPost(formData);\n        // try{\n        //     await userService.signup(state);\n        //     props.handleSignUpOrLogin()\n        //     history.push('/')\n        // } catch(err) {\n        //     console.log('handleSubmit error has occured');\n        //     console.log(err.message)\n        //     setError(err.message)\n        // }\n\n\n\n    return (\n        <Card.Description>\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"content\"\n                    value={state.content}\n                    placeholder={post.content}\n                    onChange={handleChange}\n                    required\n                />\n                <Button type=\"submit\" className='btn'>\n                    Edit Post\n                </Button>\n            </Form>\n        </Card.Description>\n    )\n}","import React, {useState} from 'react';\nimport {Grid, Form, Button} from 'semantic-ui-react';\n\nexport default function AddCommentForm({post, handleAddComment}){\n\n    console.log(post)\n    console.log(post._id);\n\n    const [state, setState] = useState({\n        commentContent: \"\",\n    });\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        handleAddComment(post._id, state);\n    }\n\n    return(\n            <Grid.Row>\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <Form.TextArea\n                            className=\"form-control\"\n                            name=\"commentContent\"\n                            value={state.commentContent}\n                            placeholder=\"Type your comment here\"\n                            onChange={handleChange}\n                        />\n                        <Button type=\"submit\" className=\"btn\">\n                            Add Comment\n                        </Button>\n                    </Form>\n            </Grid.Row>\n    )\n}","import React, {useState} from 'react';\nimport {Grid, Form, Button} from 'semantic-ui-react';\n\nexport default function EditCommentForm({comment, editComment}){\n\n    console.log(comment)\n    console.log(comment._id);\n\n    const [state, setState] = useState({\n        commentContent: \"\",\n    });\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        editComment(comment._id, state);\n    }\n\n    return(\n            <Grid.Row>\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <Form.Input\n                            className=\"form-control\"\n                            name=\"commentContent\"\n                            value={state.commentContent}\n                            placeholder={comment.commentContent}\n                            onChange={handleChange}\n                        />\n                        <Button type=\"submit\" className=\"btn\">\n                            Edit Comment\n                        </Button>\n                    </Form>\n            </Grid.Row>\n    )\n}","import React, {useState} from \"react\";\nimport {Grid, Icon, Segment, Dimmer, Loader, Image} from 'semantic-ui-react';\nimport EditCommentForm from '../EditCommentForm/EditCommentForm';\n\n\nexport default function CommentLine({comment, post, user, loading, editComment, deleteComment}){\n    const [showEditCommentForm, setShowEditCommentForm] = useState(false);\n    \n    function handleDeleteClick(){\n        deleteComment(comment._id);\n    }\n    \n    function handleEditClick(){\n        showEditCommentForm === false ? setShowEditCommentForm(() => true) : setShowEditCommentForm(() => false);\n    }\n\n    return (\n        <Grid.Row key={comment._id}>\n            <Grid.Column width={3}>\n                {comment.username}\n            </Grid.Column>\n                {\n                    showEditCommentForm === true ? (\n                        <EditCommentForm comment={comment} editComment={editComment} />\n                    ) : (\n\n                        <Grid.Column width={10}>\n                            {comment.commentContent}\n                        </Grid.Column>\n                    )\n                }\n\n            {\n                user.username === comment.username ? (\n                    <Grid.Column width={3}>\n                        <Icon floated=\"right\" size=\"small\" name={'edit outline'} color=\"black\" onClick={handleEditClick} />\n\n\n                        <span>&nbsp;</span>\n                        <Icon floated=\"right\" size=\"small\" name={'delete'} color=\"black\" onClick={handleDeleteClick}/>\n\n                    </Grid.Column>\n                ) : null\n            }\n\n\n        </Grid.Row>\n    )\n}","import React from 'react';\nimport {Grid, Segment, Dimmer, Image, Loader} from 'semantic-ui-react';\nimport AddCommentForm from '../AddCommentForm/AddCommentForm';\nimport CommentLine from '../CommentLine/CommentLine';\n\n\nexport default function Comment({ post, user, loading, handleAddComment, editComment, deleteComment}) {\n\n\n\n    return (\n        <Grid textAlign=\"center\" key={post._id}>\n            {loading ? (\n                <Segment>\n                    <Dimmer active inverted>\n                        <Loader size='small'>Loading</Loader>\n                    </Dimmer>\n                    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\"/>\n                </Segment>\n            ) : null }\n\n            {post.comments.map((comment)=>{\n                return(\n                    <CommentLine comment={comment} key={comment._id} post={post} user={user} loading={loading} editComment={editComment} deleteComment={deleteComment}/>\n                    );\n            })}\n\n            <AddCommentForm post={post} handleAddComment={handleAddComment}/>\n        </Grid>\n\n\n\n    )\n}","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport EditPostForm from \"../EditPostForm/EditPostForm\";\n\nexport default function PostContent({post, loading, showEditForm, editPost}){\n    return (\n        <>\n        {showEditForm === false ? (\n\n            <Card.Content>\n                <Card.Description>{post.content}</Card.Description>\n            </Card.Content>\n\n        ) : (\n            <EditPostForm post={post} editPost={editPost}/>\n        )}\n        </>\n    )\n}","import React, {useState} from 'react';\nimport { Card, Icon, Image, Grid, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport {Link} from 'react-router-dom';\nimport * as postsAPI from \"../../utils/postsAPI\";\nimport EditPostForm from \"../EditPostForm/EditPostForm\";\nimport Comment from '../Comment/Comment';\nimport PostContent from \"../PostContent/PostContent\"\n\n\nexport default function PostCard({\n    post,\n    isProfile,\n    addLike,\n    removeLike,\n    addInspiring,\n    removeInspiring,\n    isPostView,\n    user,\n    editPost,\n    deletePost,\n    loading,\n    contentLoading,\n    handleAddComment,\n    editComment,\n    deleteComment,\n}) {\n    const [showEditForm, setShowEditForm] = useState(false);\n    const liked = post.likes.findIndex(like => like.username === user.username)\n\n    const clickHandlerLike = liked > -1 ? () => removeLike(post.likes[liked]._id) : () => addLike(post._id)\n    const likeColor = liked > -1 ? 'red' : 'grey'\n\n\n    const inspired = post.inspiring.findIndex(inspiring => inspiring.username === user.username)\n\n    const clickHandlerInspiring = inspired > -1 ? () => removeInspiring(post.inspiring[inspired]._id) : () => addInspiring(post._id)\n    const inspiringColor = inspired > -1 ? 'red' : 'grey'\n\n    function handleEditClick() {\n        console.log('this will be edit function')\n        showEditForm === false ? setShowEditForm(() => true) : setShowEditForm(() => false);\n    }\n    \n    function handleDeleteClick() {\n        deletePost(post._id);\n    }\n\n\n\n    return (\n        <>\n\n        <Card key={post._id}>\n\n            {isProfile ? (\n                \"\"\n            ) : (\n                <>\n                    <Card.Content textAlign=\"left\">\n                        \n                    <Link to={`/username/${user.username}`}>\n                        <Image\n                            floated='left'\n                            size='large'\n                            avatar\n                            src={post.user.photoUrl[0].photoUrl}\n                            />\n                        <Card.Header floated=\"right\">{post.user.username}</Card.Header>\n                    </Link>\n                            {isPostView ? (\n                                <>\n                                {user.username === post.user.username ? (\n                                    <Card.Content textAlign=\"right\">\n                                        <Icon floated=\"right\" name={'edit outline'} color=\"black\" onClick={handleEditClick}/>\n                                        <span>&nbsp;</span>\n                                        <Icon floated=\"right\" name={'delete'} color=\"black\" onClick={handleDeleteClick}/>\n                                    </Card.Content>\n                                ) : (\"\")\n                                }\n                                </>\n                            ) : (\"\")\n                            }\n                    </Card.Content>\n                </>\n            )}\n\n\n            {isPostView ? (\n                <>\n                    <Image src={`${post.photoUrl}`} wrapped ui={false}/>\n\n                    {/* {showEditForm === false ? (\n\n                        <Card.Content>\n                            <Card.Description>{post.content}</Card.Description>\n                        </Card.Content>\n\n                    ) : (\n                        <EditPostForm post={post} editPost={editPost}/>\n                    )} */}\n                    {\n                        contentLoading ? (\n                        <Segment>\n                            <Dimmer active inverted>\n                                <Loader size='small'>Loading</Loader>\n                            </Dimmer>\n                            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\"/>\n                        </Segment>\n                        ):(\n                            <PostContent post={post} showEditForm={showEditForm} editPost={editPost}/>\n                        )\n                    }\n                </>\n            ) : (\n                <Link to={`/posts/${post._id}`}>\n                    <Image src={`${post.photoUrl}`} wrapped ui={true}/>\n                    <PostContent post={post}/>\n                </Link>\n            )}\n\n\n            <Card.Content>\n                    <Grid>\n                        <Grid.Row>\n                            <Grid.Column width={3} textAlign={'left'}>\n                                <Link to={`/posts/${post._id}`}><Icon name={\"comments outline\"} size=\"large\" color='grey'/></Link>\n                            </Grid.Column>\n                            <Grid.Column width={13} textAlign={'right'}>\n                                <Icon name={\"heart\"} size=\"large\" color={likeColor} onClick={clickHandlerLike} />\n                                {post.likes.length} Likes\n                                <Icon name={\"idea\"} size=\"large\" color={inspiringColor} onClick={clickHandlerInspiring} />\n                                {post.inspiring.length} Inspiring\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n            </Card.Content>\n\n\n            {isPostView ? (\n                <Card.Content>\n                    <Comment post={post} user={user} loading={loading} handleAddComment={handleAddComment} editComment={editComment} deleteComment={deleteComment}/>\n                </Card.Content>\n            ) : (\"\")}\n\n        </Card>\n        </>\n    )\n}","import React from 'react';\nimport {Card, Loader, Grid, Dimmer, Segment, Image} from 'semantic-ui-react';\nimport PostCard from \"../PostCard/PostCard\";\n\nexport default function PostFeed({\n    posts,\n    numPhotosCol,\n    isProfile,\n    loading,\n    addLike,\n    removeLike,\n    addInspiring,\n    removeInspiring,\n    isPostView,\n    user\n}) {\n    return (\n\n        <Card.Group itemsPerRow={numPhotosCol} stackable>\n            {loading ? (\n                <Segment>\n                    <Dimmer active inverted>\n                        <Loader size='small'>Loading</Loader>\n                    </Dimmer>\n                    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\"/>\n                </Segment>\n            ) : null}\n            {posts.map((post)=>{\n                return(\n                    <PostCard\n                        post={post}\n                        key={post._id}\n                        isProfile={isProfile}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        addInspiring={addInspiring}\n                        removeInspiring={removeInspiring}\n                        user={user}\n                        isPostView={isPostView}\n                    />\n                );\n            })}\n        </Card.Group>\n\n    );\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/'\n\nexport function create(postID) {\n    return fetch(`${BASE_URL}posts/${postID}/likes`, {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error liking Post');\n    })\n}\n\nexport function removeLike(likeID) {\n    return fetch(`${BASE_URL}likes/${likeID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error deleting likes post');\n    })\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/'\n\nexport function create(postID) {\n    return fetch(`${BASE_URL}posts/${postID}/inspiring`, {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error inspiring Post');\n    })\n}\n\nexport function removeInspiring(inspireID) {\n    return fetch(`${BASE_URL}inspiring/${inspireID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error deleting inspiring post');\n    })\n}","import React, {useEffect, useState} from 'react'\nimport AddPostForm from \"../../components/AddPostForm/AddPostForm\";\nimport PostFeed from \"../../components/PostFeed/PostFeed\"\nimport NavBar from \"../../components/NavBar/NavBar\"\nimport { Grid } from 'semantic-ui-react';\nimport * as postsAPI from '../../utils/postsAPI';\nimport * as likesAPI from '../../utils/likesAPI';\nimport * as inspiringAPI from '../../utils/inspiringAPI';\n\nexport default function ArtFeedPage({user, handleLogout}) {\n    //ArtFeed page will have sections of the art for sketch, paint, pixel art, drawings\n    //May implement anchor url location.href\n    //hovering button that contains anchor tag might work\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    async function handleAddPost(post) {\n        setLoading(true)\n        const data = await postsAPI.create(post);\n        console.log(data.post, \" This is new post\", data, \" data var\");\n        setPosts((posts) => [data.post, ...posts]);\n        setLoading(false);\n    }\n\n    async function getPosts() {\n        try {\n            const data= await postsAPI.getAll();\n            setPosts([...data.posts]); \n        } catch (err) {\n            console.log(err, \" an error has occoured while getting posts\");\n        }\n    }\n\n\n    async function addLike(postId) {\n        console.log(postId);\n        try {\n          const data = await likesAPI.create(postId);\n          console.log(data, \" this is from addLike\");\n          getPosts();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeLike(likeID) {\n        try {\n            const data = await likesAPI.removeLike(likeID);\n            getPosts();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async function addInspiring(postId) {\n        console.log(postId);\n        try {\n          const data = await inspiringAPI.create(postId);\n          console.log(data, \" this is from addInspiring\");\n          getPosts();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeInspiring(inspiringID) {\n        try {\n            const data = await inspiringAPI.removeInspiring(inspiringID);\n            getPosts();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n\n    useEffect(() => {\n        getPosts();\n    }, []);\n\n    return (\n    <>\n        <NavBar user={user} handleLogout={handleLogout} />\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <h2>PageHeader will be here</h2>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 300 }}>\n                    <AddPostForm handleAddPost={handleAddPost}/>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 300 }}>\n                    <PostFeed\n                        posts={posts}\n                        numPhotosCol={1}\n                        loading={loading}\n                        isProfile={false}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        addInspiring={addInspiring}\n                        removeInspiring={removeInspiring}\n                        isPostView={false}\n                        user={user}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    </>\n    )\n}","import React, {useState} from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport {Button, Form, Grid, Segment} from 'semantic-ui-react'\nimport {useHistory} from 'react-router-dom';\nimport userService from '../../utils/userService';\n\nexport default function EditProfileBioForm({user}){\n\n    const [error, setError] = useState('')\n    const [selectedFile, setSelectedFile] = useState(\"\")\n    const [state, setState] = useState({\n        bio: \"\",\n    });\n\n    const history = useHistory()\n\n    function handleFileInput(e){\n        setSelectedFile(e.target.files[0]);\n    }\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n    async function handleSubmit(e){\n        e.preventDefault();\n        console.log(state)\n        console.log(selectedFile);\n        var formData = new FormData();\n        formData.append(\"photo\", selectedFile);\n        formData.append(\"bio\", state.bio);\n        console.log(formData);\n        try{\n            await userService.updateProfile(user, formData);\n            history.push(`/username/${user.username}`);\n        } catch (err) {\n            console.log(err.message)\n            setError(err.message)\n        }\n        \n    }\n\n    return (\n        <Grid textAlign=\"center\" style={{ height:'100vh' }} verticalAlign=\"middle\">\n            <Grid.Column style={{ maxWidth: 300 }}>\n                <Segment stacked>\n                    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                        <Form.TextArea\n                            className=\"form-control\"\n                            name=\"bio\"\n                            value={state.bio}\n                            placeholder=\"Tell us about you!\"\n                            onChange={handleChange}\n                        />\n                        <Form.Field>\n                            <Form.Input\n                                className=\"form-control\"\n                                type=\"file\"\n                                name=\"photo\"\n                                placeholder=\"upload your profile picture\"\n                                onChange={handleFileInput}\n                            />\n                        </Form.Field>\n                        <Button type=\"submit\" className='btn'>\n                            Update Profile\n                        </Button>\n                        {error ? <ErrorMessage error={error} /> : null}\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    )\n\n}","import React, {useState, useEffect} from 'react';\nimport { Image, Grid, Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport EditProfileBioForm from \"../EditProfileBioForm/EditProfileBioForm\"\n\nexport default function ProfileBio({user}) {\n    console.log(user)\n    console.log(' this is user from the profilebio.js')\n\n\n\n    return (\n            <Grid textAlign='center' column={1}>\n            <Grid.Row>\n                <Grid.Column style={{ minWidth: 150 }}>\n                    <Image src={`${user.photoUrl[0].photoUrl}`} avatar size='small' />\n                    <Segment vertical>\n                        <h3>{user.username}</h3>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column textAlign='center' style={{ minWidth: 150 }}>\n                    <Segment>\n                        <h3>Bio: {`${user.bio ? user.bio : 'No Bio Yet'}`}</h3>\n                    </Segment>\n                    <Segment>\n                        <EditProfileBioForm user={user}/>\n                    </Segment>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {Grid, Loader, Segment, Dimmer, Image} from 'semantic-ui-react';\nimport userService from \"../../utils/userService\";\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\nimport PostFeed from \"../../components/PostFeed/PostFeed\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport {useParams} from \"react-router-dom\";\nimport * as likesAPI from \"../../utils/likesAPI\";\nimport * as inspiringAPI from \"../../utils/inspiringAPI\";\n\n\n    // profile page will have user's posts and bio info;\n    // if the user is the profile owner, then the page will show buttons for edit profile and post, as well as delete posts.\n\nexport default function ProfilePage({ user, handleLogout }) {\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const {username} = useParams();\n \n    async function getProfile() {\n        try{\n            const data = await userService.getProfile(username);\n            console.log(data, \" data\");\n\n            setPosts(() => [...data.posts]);\n            setProfileUser(() => data.user);\n            setLoading(() => false);\n        } catch (err) {\n            console.log(err);\n            setError(\"No profile\");\n        }\n    }\n\n    async function addLike(postId) {\n        console.log(postId);\n        try {\n          const data = await likesAPI.create(postId);\n          console.log(data, \" this is from addLike\");\n          getProfile();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeLike(likeID) {\n        try {\n            const data = await likesAPI.removeLike(likeID);\n            getProfile();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    async function addInspiring(postId) {\n        console.log(postId);\n        try {\n          const data = await inspiringAPI.create(postId);\n          console.log(data, \" this is from addInspiring\");\n          getProfile();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeInspiring(inspiringID) {\n        try {\n            const data = await inspiringAPI.removeInspiring(inspiringID);\n            getProfile();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    useEffect(()=> {\n        getProfile();\n    }, []);\n\n    if (error) {\n        return (\n            <h1>{error}</h1>\n        )\n    }\n\n    if (loading) {\n        return (\n          <Grid\n            textAlign=\"center\"\n            style={{ height: \"100vh\" }}\n            verticalAlign=\"middle\"\n          >\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Loader size=\"large\" active>\n                Loading\n              </Loader>\n            </Grid.Column>\n          </Grid>\n        );\n      }\n\n    return (\n        <>\n        <NavBar user={user} handleLogout={handleLogout}/>\n        <Grid> \n                <Grid.Row>\n                    <Grid.Column>\n                        <h1>Nav bar will be here</h1>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column>\n\n                        <ProfileBio user={profileUser}/>\n\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                    <Grid.Column style={{ maxWidth: 300 }}>\n                        <PostFeed\n                            isProfile={true}\n                            posts={posts}\n                            numPhotosCol={3}\n                            addLike={addLike}\n                            removeLike={removeLike}\n                            addInspiring={addInspiring}\n                            removeInspiring={removeInspiring}\n                            user={user}\n                        />\n                    </Grid.Column>\n                </Grid.Row> \n        </Grid>\n        </>\n    )\n}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/'\n\nexport function create(postID, data) {\n    return fetch(`${BASE_URL}posts/${postID}/comments`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'content-Type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => {\n        if(res.ok) return res.json()\n        new Error('Error inspiring Post');\n    })\n}\nexport function getAllComments(postID) {\n    return fetch(`${BASE_URL}posts/${postID}/comments`, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}\n\nexport function getOneComment(commentID) {\n    return fetch(`${BASE_URL}comments/${commentID}`, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}\n\nexport function editComment(commentID, data) {\n    return fetch(`${BASE_URL}comments/${commentID}`, {\n        method: 'PUT',\n        body: JSON.stringify(data),\n        headers: {\n            'content-Type': 'application/json',\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}\n\n\nexport function deleteComment(commentID) {\n    return fetch(`${BASE_URL}comments/${commentID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport PostCard from \"../../components/PostCard/PostCard\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport * as postsAPI from '../../utils/postsAPI';\nimport * as likesAPI from '../../utils/likesAPI';\nimport * as inspiringAPI from '../../utils/inspiringAPI';\nimport * as commentsAPI from '../../utils/commentsAPI';\nimport {Grid, Segment, Dimmer, Image, Loader} from \"semantic-ui-react\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function Post({ user, handleLogout }) {\n\n    const [post, setPost] = useState([]);\n    const postId = useParams().id;\n    const [loading, setLoading] = useState(true);\n    const [contentLoading, setContentLoading] = useState(false);\n\n\n    const history = useHistory();\n\n    async function getPost() {\n      try {\n            const data= await postsAPI.getOne(postId);\n\n            setPost(data.post);\n            setLoading(() => false);\n          } catch (err) {\n            console.log(err, \" an error has occoured while getting posts\");\n        }\n    }\n    \n\n    async function addLike(postId) {\n        console.log(postId);\n        try {\n          const data = await likesAPI.create(postId);\n          console.log(data, \" this is from addLike\");\n          getPost();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeLike(likeID) {\n        try {\n            const data = await likesAPI.removeLike(likeID);\n            getPost();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async function addInspiring(postId) {\n        console.log(postId);\n        try {\n          const data = await inspiringAPI.create(postId);\n          console.log(data, \" this is from addInspiring\");\n          getPost();\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    \n    async function removeInspiring(inspiringID) {\n        try {\n            const data = await inspiringAPI.removeInspiring(inspiringID);\n            getPost();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    async function editPost(postId, state) {\n      console.log(postId);\n      console.log(state.content);\n      try {\n          setContentLoading(true);\n          const data = await postsAPI.updatePost(postId, state);\n          setContentLoading(false);\n          getPost();\n      } catch(err) {\n          console.log(err)\n      }\n    }\n\n    async function deletePost(postId) {\n        try {\n            const data = await postsAPI.deletePost(postId);\n            console.log(data, \" this is from deleting post\");\n            history.push('/art_feed');\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    async function handleAddComment(postId, input) {\n      console.log(postId);\n      setLoading(true);\n      const data = await commentsAPI.create(postId, input);\n      console.log(data)\n      setLoading(()=>false);\n  }\n\n\n\n  async function editComment(commentId, input) {\n    console.log(commentId);\n    console.log(input);\n    try {\n        setLoading(true);\n        const data = await commentsAPI.editComment(commentId, input);\n        setLoading(false);\n        console.log(data, \" this is from editing Comment\");\n    } catch(err) {\n        console.log(err)\n    }\n  }\n\n  async function deleteComment(commentId) {\n      try {\n          setLoading(true);\n          const data = await commentsAPI.deleteComment(commentId);\n          setLoading(false);\n          console.log(data, \" this is from deleting post\");\n      } catch(err) {\n          console.log(err)\n      }\n  }\n\n    useEffect(() => {\n        getPost();\n    }, [loading]);\n\n    return (\n      <>\n      <NavBar user={user} handleLogout={handleLogout}/>\n      {loading ? (\n        \"\"\n      ):(\n        <Grid textAlign=\"center\" style={{ marginTop: 15, height: '90vh'}}>\n          <PostCard\n          post={post}\n          key={post._id}\n          addLike={addLike}\n          removeLike={removeLike}\n          addInspiring={addInspiring}\n          removeInspiring={removeInspiring}\n          user={user}\n          isPostView={true}\n          editPost={editPost}\n          deletePost={deletePost}\n          loading={loading}\n          contentLoading={contentLoading}\n          handleAddComment={handleAddComment}\n          editComment={editComment}\n          deleteComment={deleteComment}\n          />\n\n        </Grid>\n      )}\n      </>\n    )\n}","import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService';\nimport HomePage from '../HomePage/HomePage';\nimport ArtFeedPage from '../ArtFeedPage/ArtFeedPage';\nimport ProfilePage from \"../ProfilePage/ProfilePage\"\nimport Post from \"../Post/Post\";\n\nfunction App() {\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? (\n             <Switch>\n                <Route exact path=\"/\">\n                    <HomePage user={user} handleLogout={handleLogout}/>\n                </Route>\n                <Route exact path=\"/art_feed\">\n                  <ArtFeedPage user={user} handleLogout={handleLogout}/>\n                </Route>\n                <Route path=\"/username/:username\">\n                  <ProfilePage user={user} handleLogout={handleLogout}/>\n                </Route>\n                <Route path=\"/posts/:id\">\n                  <Post user={user} handleLogout={handleLogout}/>\n                </Route>\n            </Switch>\n           ) : (\n            <Redirect to='/login'/>\n           )}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}